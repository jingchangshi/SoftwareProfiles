#!/bin/bash
# Regexp for grep to only choose some file extensions for formatting
# exts="\.\(f90\|ext2\)$"
exts="\.\(f90\)$"

# The formatter to use
formatter=`which fprettify`

# Check availability of the formatter
if [ -z "$formatter" ]
then
  1>&2 echo "$formatter not found. Pre-commit formatting will not be done."
  exit 0
fi

# Format staged files
for file in `git diff --cached --name-only --diff-filter=ACMR | grep $exts`
do
  echo "Formatting $file"
  # Get the file from index
  # git show ":$file" > "$file.tmp"
  # Format it
  # "$formatter" "$file.tmp"
  # Create a blob object from the formatted file
  # hash=`git hash-object -w "$file.tmp"`
  # Add it back to index
  # git update-index --add --cacheinfo 100644 "$hash" "$file"
  # Remove the tmp file
  # rm "$file.tmp"
  #
  message=$("$formatter" "$file" 2>&1)
  if [[ "$message" == *"WARNING"* ]]; then
    printf "$message\n"
    ret=1
  else
    git add "$file"
  fi
done

if [[ "$ret" == "1" ]]; then
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    printf "${RED}Formatting is not finished successfully!${NC}\n"
    printf "${RED}Thus the changes are not committed!${NC}\n"
    exit 1
fi
# If no files left in index after formatting - fail
ret=0
if [ ! "`git diff --cached --name-only`" ]; then
  1>&2 echo "No files left after formatting"
  exit 1
fi

